#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include "macros.dtsi"
#include "behaviors.dtsi"
#include "combos.dtsi"

/ {
    /* input config for mouse move mode */
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 7>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <4>;
        scale-divisor = <5>;
        // bindings = <&ib_toggle_layer 7>;
    };

    /* input config for snipe mode */
    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";   
        device = <&vtrackball>;
        layers = <8>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <6>;
    };

    /* input config for mouse scroll mode */
    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <9>;
        evt-type = <INPUT_EV_REL>;            
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 14>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */
    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */
    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };
// ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
//    00     01     02     03    04      05        06     07     08     09     10     11
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    12     13     14     15    16      17        18     19     20     21     22     23
// ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
//    24     25     26     27    28      29        30     31     32     33     34     35
// ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
//                         36     37     38        39     40
//                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
#define BASE 0
#define NUFU 1
#define SYM 2
#define NAV 3
#define MED 4
#define POI 5
#define SCR 6
#define SNI 7

    keymap {
        compatible = "zmk,keymap";
        BASE {
            bindings = <
// ╭────────────────┬──────────────┬─────────────────────────────┬──────────────────────────────────┬──────────────────────┬────────╮  ╭────────────────┬─────────────────────────┬──────────────────────────────────────┬────────────────────────────────────┬────────────────────────┬──────────────╮
    &none             &kp Q           &kp W                          &kp E                              &kp R                  &kp T       &kp Y             &kp U                   &kp I                                   &kp O                                &kp P                    &none
// ├────────────────┼──────────────┼─────────────────────────────┼──────────────────────────────────┼──────────────────────┼────────┤  ├────────────────┼─────────────────────────┼──────────────────────────────────────┼────────────────────────────────────┼────────────────────────┼──────────────┤
    &none            &hm_left LALT A    &hm_left LCTRL S            &hm_left LGUI D                   &hm_left LSHIFT F      &kp G       &kp H             &hm_right RSHIFT J          &hm_right RGUI K                       &hm_right RCTRL L                &hm_right RALT SEMICOLON &none
// ├────────────────┼──────────────┼─────────────────────────────┼──────────────────────────────────┼──────────────────────┼────────┤  ├────────────────┼─────────────────────────┼──────────────────────────────────────┼────────────────────────────────────┼────────────────────────┼──────────────┤
    &none                &kp Z        &kp X                        &kp C                              &kp V                  &kp B       &kp N             &kp M                       &kp COMMA                              &kp PERIOD                          &kp SLASH                 &none
// ╰────────────────┴──────────────┴─────────────────────────────┼──────────────────────────────────┼──────────────────────┼────────┤  ├────────────────┼─────────────────────────┼──────────────────────────────────────┴────────────────────────────────────┴────────────────────────┴──────────────╯
                                                                               &lt NUFU TAB    &lt SYM SPACE     &lt MED ESC             &hm_left LA(LC(LG(LEFT_SHIFT))) BACKSPACE    &lt NAV ENTER
                                                                          // ╰─────────────┴──────────────────┴────────╯               ╰───────----------------------------─────────┴──────────────╯
            >;
        };

        NuFu {
            label = "Numeral/Function";
            bindings = <
                &none &kp N1  &kp N2  &kp N3  &kp N4 &kp N5        &kp N6  &kp N7  &kp N8  &kp N9  &kp N0 &none
                &none &kp F1  &kp F2  &kp F3  &kp F4 &kp F5        &kp SLASH  &kp N4  &kp N5  &kp N6  &kp PLUS &none
                &none &kp F6  &kp F7  &kp F8  &kp F9 &kp F10        &kp ASTRK  &kp N1  &kp N2  &kp N3  &kp MINUS &none
                                &trans  &trans  &trans        &kp EQUAL &kp N0
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
              &none &kp EXCL &kp AT  &kp HASH   &kp DLLR    &kp PRCNT        &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR &none 
              &none &kp GRAVE &hm_left LALT 0 &hm_left LCTRL 0  &hm_left LGUI 0 &hm_left LSHFT 0                  &trans &hm_right RSHFT LBKT  &hm_right RGUI RBKT  &hm_right RCTRL APOS &hm_right RALT BSLH &none 
              &none &kp UNDER &kp EXCL  &kp AT     &kp HASH  &kp GRAVE       &trans &kp MINUS &kp EQUAL &trans  &trans &none 
                                  &trans     &trans    &trans          &kp DELETE &trans
            >;
        };

  Navigation {
            label = "Navigation";
            bindings = <
                         &none &trans  &trans  &trans  &kp HOME  &kp PAGE_UP         &trans    &trans         &kp TAB      &trans    &trans &none 
                         &none &trans  &trans  &trans  &kp END  &kp PAGE_DOWN         &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT &trans &none 
                         &none &trans  &trans  &trans  &trans  &trans         &trans   &trans    &trans         &trans       &trans &none 
                                         &trans  &trans  &trans         &trans    &trans
            >;
        };

        Media {
            label = "Media";
            bindings = <
              &none &trans     &trans        &bt BT_CLR_ALL &trans       &trans            &trans      &trans        &bt BT_CLR_ALL  &trans        &trans &none 
              &none &kp C_MUTE &kp C_VOL_DN  &kp C_VOL_UP     &kp C_PREV &kp C_NEXT        &kp C_PREV  &kp C_NEXT  &kp C_VOL_DN      &kp C_VOL_UP  &kp C_MUTE &none 
              &none &trans     &trans        &trans         &trans       &trans            &trans      &trans        &trans          &trans        &trans &none 
                                       &kp C_STOP    &kp C_PLAY_PAUSE  &trans        &kp C_PLAY_PAUSE  &kp C_STOP 
            >;
        };

        Pointer {
            label = "Pointer";
            bindings = <
              &none &trans       &trans       &trans        &trans        &trans               &trans &trans        &trans        &trans       &trans &none 
              &none &kp LGUI     &kp LALT     &kp LCTRL     &kp LSHFT     &trans               &trans &kp RSHFT     &kp RCTRL     &kp RALT     &kp RGUI &none 
              &none &trans       &mo SCR      &mo SNI       &trans        &trans               &trans &trans        &tog SNI      &tog SCR     &trans &none 
                                            &mkp RCLK  &mkp LCLK  &mkp MCLK         &mkp MCLK  &mkp LCLK
            >;
        };

        Scroll {
            label = "Scroll";
            bindings = <
                &none &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans &none 
                &none &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans &none 
                &none &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans &none 
                                &trans  &trans  &trans    &trans  &trans 
            >;
        };

        Sniper {
            label = "Sniper";
            bindings = <
                &none &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans &none 
                &none &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans &none 
                &none &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans &none 
                                &trans  &trans  &trans    &trans  &trans 
            >;
        };



    };
};
